{
    "pipes": [],
    "interfaces": [
        {
            "name": "Chainable",
            "id": "interface-Chainable-18a4949074175452550ac7042867edc2",
            "file": "apps/event-e2e/src/support/commands.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "declare namespace Cypress {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface Chainable<Subject> {\n    login(email: string, password: string): void;\n  }\n}\n//\n// -- This is a parent command --\nCypress.Commands.add('login', (email, password) => {\n  console.log('Custom command example: Login', email, password);\n});\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\n",
            "properties": [],
            "indexSignatures": [],
            "kind": 165,
            "methods": [
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-19c1ab944830b901552ec2b181f8a70a",
            "file": "apps/event/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "event-organizer-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'event'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'event-organizer-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'event';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/*\n   * Remove template code below\n   */\n:host {\n  display: block;\n  font-family: sans-serif;\n  min-width: 300px;\n  max-width: 600px;\n  margin: 50px auto;\n}\n\n.gutter-left {\n  margin-left: 9px;\n}\n\n.col-span-2 {\n  grid-column: span 2;\n}\n\n.flex {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\nheader {\n  background-color: #143055;\n  color: white;\n  padding: 5px;\n  border-radius: 3px;\n}\n\nmain {\n  padding: 0 36px;\n}\n\np {\n  text-align: center;\n}\n\nh1 {\n  text-align: center;\n  margin-left: 18px;\n  font-size: 24px;\n}\n\nh2 {\n  text-align: center;\n  font-size: 20px;\n  margin: 40px 0 10px 0;\n}\n\n.resources {\n  text-align: center;\n  list-style: none;\n  padding: 0;\n  display: grid;\n  grid-gap: 9px;\n  grid-template-columns: 1fr 1fr;\n}\n\n.resource {\n  color: #0094ba;\n  height: 36px;\n  background-color: rgba(0, 0, 0, 0);\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  border-radius: 4px;\n  padding: 3px 9px;\n  text-decoration: none;\n}\n\n.resource:hover {\n  background-color: rgba(68, 138, 255, 0.04);\n}\n\npre {\n  padding: 9px;\n  border-radius: 4px;\n  background-color: black;\n  color: #eee;\n}\n\ndetails {\n  border-radius: 4px;\n  color: #333;\n  background-color: rgba(0, 0, 0, 0);\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  padding: 3px 9px;\n  margin-bottom: 9px;\n}\n\nsummary {\n  cursor: pointer;\n  outline: none;\n  height: 36px;\n  line-height: 36px;\n}\n\n.github-star-container {\n  margin-top: 12px;\n  line-height: 20px;\n}\n\n.github-star-container a {\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  color: #333;\n}\n\n.github-star-badge {\n  color: #24292e;\n  display: flex;\n  align-items: center;\n  font-size: 12px;\n  padding: 3px 10px;\n  border: 1px solid rgba(27, 31, 35, 0.2);\n  border-radius: 3px;\n  background-image: linear-gradient(-180deg, #fafbfc, #eff3f6 90%);\n  margin-left: 4px;\n  font-weight: 600;\n}\n\n.github-star-badge:hover {\n  background-image: linear-gradient(-180deg, #f0f3f6, #e6ebf1 90%);\n  border-color: rgba(27, 31, 35, 0.35);\n  background-position: -0.5em;\n}\n.github-star-badge .material-icons {\n  height: 16px;\n  width: 16px;\n  margin-right: 4px;\n}\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<header class=\"flex\">\n  <svg width=\"40\" height=\"40\" viewBox=\"0 0 262 163\">\n    <polygon\n      id=\"Path\"\n      fill=\"#ffffff\"\n      points=\"130.68 104.59 97.49 52.71 97.44 96.3 40.24 0 0 0 0 162.57 39.79 162.57 39.92 66.39 96.53 158.26\"\n    ></polygon>\n    <polygon\n      id=\"Path\"\n      fill=\"#ffffff\"\n      points=\"97.5 41.79 137.24 41.79 137.33 41.33 137.33 0 97.54 0 97.49 41.33\"\n    ></polygon>\n    <path\n      d=\"M198.66,86.86 C189.139872,86.6795216 180.538723,92.516445 177.19,101.43 C182.764789,93.0931021 193.379673,89.7432211 202.73,93.37 C207.05,95.13 212.73,97.97 217.23,96.45 C212.950306,90.4438814 206.034895,86.8725952 198.66,86.86 L198.66,86.86 Z\"\n      id=\"Path\"\n      fill=\"#96D8E9\"\n    ></path>\n    <path\n      d=\"M243.75,106.42 C243.75,101.55 241.1,100.42 235.6,98.42 C231.52,97 226.89,95.4 223.52,91 C222.86,90.13 222.25,89.15 221.6,88.11 C220.14382,85.4164099 218.169266,83.037429 215.79,81.11 C212.58,78.75 208.37,77.6 202.91,77.6 C191.954261,77.6076705 182.084192,84.2206169 177.91,94.35 C183.186964,87.0278244 191.956716,83.0605026 200.940147,83.9314609 C209.923578,84.8024193 217.767888,90.3805017 221.54,98.58 C223.424615,101.689762 227.141337,103.174819 230.65,102.22 C236.02,101.07 235.65,106.15 243.76,107.87 L243.75,106.42 Z\"\n      id=\"Path\"\n      fill=\"#48C4E5\"\n    ></path>\n    <path\n      d=\"M261.46,105.38 L261.46,105.27 C261.34,73.03 235.17,45.45 202.91,45.45 C183.207085,45.4363165 164.821777,55.3450614 154,71.81 L153.79,71.45 L137.23,45.45 L97.5,45.4499858 L135.25,104.57 L98.41,162.57 L137,162.57 L153.79,136.78 L170.88,162.57 L209.48,162.57 L174.48,107.49 C173.899005,106.416838 173.583536,105.220114 173.56,104 C173.557346,96.2203871 176.64661,88.7586448 182.147627,83.2576275 C187.648645,77.7566101 195.110387,74.6673462 202.89,74.67 C219.11,74.67 221.82,84.37 225.32,88.93 C232.23,97.93 246.03,93.99 246.03,105.73 L246.03,105.73 C246.071086,108.480945 247.576662,111.001004 249.979593,112.340896 C252.382524,113.680787 255.317747,113.636949 257.679593,112.225896 C260.041438,110.814842 261.471086,108.250945 261.43,105.5 L261.43,105.5 L261.43,105.38 L261.46,105.38 Z\"\n      id=\"Path\"\n      fill=\"#ffffff\"\n    ></path>\n    <path\n      d=\"M261.5,113.68 C261.892278,116.421801 261.504116,119.218653 260.38,121.75 C258.18,126.84 254.51,125.14 254.51,125.14 C254.51,125.14 251.35,123.6 253.27,120.65 C255.4,117.36 259.61,117.74 261.5,113.68 Z\"\n      id=\"Path\"\n      fill=\"#022f56\"\n    ></path>\n  </svg>\n  <h1>Welcome to {{ title }}!</h1>\n</header>\n<main>\n  <h2>Resources &amp; Tools</h2>\n  <p>Thank you for using and showing some â™¥ for Nx.</p>\n  <div class=\"flex github-star-container\">\n    <a\n      href=\"https://github.com/nrwl/nx\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      If you like Nx, please give it a star:\n      <div class=\"github-star-badge\">\n        <svg\n          class=\"material-icons\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n          <path\n            d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n          />\n        </svg>\n        Star\n      </div>\n    </a>\n  </div>\n  <p>Here are some links to help you get started.</p>\n  <ul class=\"resources\">\n    <li class=\"col-span-2\">\n      <a class=\"resource flex\" href=\"https://nxplaybook.com/p/nx-workspaces\">\n        Nx video course\n      </a>\n    </li>\n    <li class=\"col-span-2\">\n      <a\n        class=\"resource flex\"\n        href=\"https://nx.dev/latest/angular/getting-started/getting-started\"\n      >\n        Nx video tutorial\n      </a>\n    </li>\n    <li class=\"col-span-2\">\n      <a\n        class=\"resource flex\"\n        href=\"https://nx.dev/latest/angular/tutorial/01-create-application\"\n      >\n        Interactive tutorial\n      </a>\n    </li>\n    <li class=\"col-span-2\">\n      <a class=\"resource flex\" href=\"https://nx.app/\">\n        <svg\n          width=\"36\"\n          height=\"36\"\n          viewBox=\"0 0 120 120\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M120 15V30C103.44 30 90 43.44 90 60C90 76.56 76.56 90 60 90C43.44 90 30 103.44 30 120H15C6.72 120 0 113.28 0 105V15C0 6.72 6.72 0 15 0H105C113.28 0 120 6.72 120 15Z\"\n            fill=\"#0E2039\"\n          />\n          <path\n            d=\"M120 30V105C120 113.28 113.28 120 105 120H30C30 103.44 43.44 90 60 90C76.56 90 90 76.56 90 60C90 43.44 103.44 30 120 30Z\"\n            fill=\"white\"\n          />\n        </svg>\n        <span class=\"gutter-left\">Nx Cloud</span>\n      </a>\n    </li>\n  </ul>\n  <h2>Next Steps</h2>\n  <p>Here are some things you can do with Nx.</p>\n  <details open>\n    <summary>Add UI library</summary>\n    <pre>\n  # Generate UI lib\n  nx g @nrwl/angular:lib ui\n  \n  # Add a component\n  nx g @nrwl/angular:component xyz --project ui</pre\n    >\n  </details>\n  <details>\n    <summary>View dependency graph</summary>\n    <pre>nx dep-graph</pre>\n  </details>\n  <details>\n    <summary>Run affected commands</summary>\n    <pre>\n  # see what's been affected by changes\n  nx affected:dep-graph\n  \n  # run tests for current changes\n  nx affected:test\n  \n  # run e2e tests for current changes\n  nx affected:e2e\n  </pre\n    >\n  </details>\n</main>\n"
        },
        {
            "name": "AvatarComponent",
            "id": "component-AvatarComponent-63c1109275e2bedab88b36929b69c638",
            "file": "libs/shared/ui/src/lib/avatar/avatar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-avatar",
            "styleUrls": [
                "./avatar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./avatar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines the icon to display.",
                    "description": "<p>Defines the icon to display.</p>\n",
                    "line": 38,
                    "type": "any"
                },
                {
                    "name": "image",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines the image to display.",
                    "description": "<p>Defines the image to display.</p>\n",
                    "line": 43,
                    "type": "any"
                },
                {
                    "name": "label",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines the text to display.",
                    "description": "<p>Defines the text to display.</p>\n",
                    "line": 33,
                    "type": "any"
                },
                {
                    "name": "shape",
                    "defaultValue": "'circle'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Shape of the element, valid options are \"square\" and \"circle\".",
                    "description": "<p>Shape of the element, valid options are &quot;square&quot; and &quot;circle&quot;.</p>\n",
                    "line": 53,
                    "type": "AvatarShape"
                },
                {
                    "name": "size",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Size of the element, valid options are \"regular\", \"large\" and \"xlarge\".",
                    "description": "<p>Size of the element, valid options are &quot;regular&quot;, &quot;large&quot; and &quot;xlarge&quot;.</p>\n",
                    "line": 48,
                    "type": "AvatarSize"
                },
                {
                    "name": "style",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Inline style of the element.",
                    "description": "<p>Inline style of the element.</p>\n",
                    "line": 58,
                    "type": "any"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "containerClass",
                    "args": [],
                    "optional": false,
                    "returnType": "{ avatar: boolean; 'avatar-image': boolean; 'avatar-circle': boolean; 'avatar-square': boolean; 'avatar-lg': boolean; 'avatar-xl': boolean; }",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvaluate which css classes to apply to the element.\n",
                    "description": "<p>Evaluate which css classes to apply to the element.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1219,
                                "end": 1226,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "returns"
                            },
                            "comment": "<p>css classes</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Avatar represents people using icons, labels and images.</p>\n",
            "rawdescription": "\n\nAvatar represents people using icons, labels and images.\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\n/**\n * Shape options for the avatar.\n */\nexport type AvatarShape = 'square' | 'circle';\n\n/**\n * Size options for the avatar.\n */\nexport type AvatarSize = 'regular' | 'large' | 'xlarge';\n\n/**\n * Avatar represents people using icons, labels and images.\n */\n\n@Component({\n  selector: 'ui-avatar',\n  templateUrl: './avatar.component.html',\n  styleUrls: ['./avatar.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AvatarComponent {\n  /**\n   * Defines the text to display.\n   */\n  @Input() label = null;\n\n  /**\n   * Defines the icon to display.\n   */\n  @Input() icon = null;\n\n  /**\n   * Defines the image to display.\n   */\n  @Input() image = null;\n\n  /**\n   * Size of the element, valid options are \"regular\", \"large\" and \"xlarge\".\n   */\n  @Input() size: AvatarSize = 'regular';\n\n  /**\n   * Shape of the element, valid options are \"square\" and \"circle\".\n   */\n  @Input() shape: AvatarShape = 'circle';\n\n  /**\n   * Inline style of the element.\n   */\n  @Input() style = null;\n\n  /**\n   * Evaluate which css classes to apply to the element.\n   * @returns css classes\n   */\n  containerClass() {\n    return {\n      avatar: true,\n      'avatar-image': this.image != null,\n      'avatar-circle': this.shape === 'circle',\n      'avatar-square': this.shape === 'square',\n      'avatar-lg': this.size === 'large',\n      'avatar-xl': this.size === 'xlarge',\n    };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".avatar {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #3f4b5b;\n  width: 2rem;\n  height: 2rem;\n  font-size: 1rem;\n\n  &.avatar-image {\n    background-color: transparent;\n  }\n\n  &.avatar-circle {\n    border-radius: 50%;\n    overflow: hidden;\n  }\n\n  &.avatar-square {\n    border-radius: 4px;\n  }\n\n  .avatar-icon {\n    font-size: 1rem;\n  }\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n\n  &.avatar-lg {\n    width: 3rem;\n    height: 3rem;\n    font-size: 1.5rem;\n\n    .avatar-icon {\n      font-size: 1.5rem;\n    }\n  }\n\n  &.avatar-xl {\n    width: 4rem;\n    height: 4rem;\n    font-size: 2rem;\n\n    .avatar-icon {\n      font-size: 2rem;\n    }\n  }\n}\n",
                    "styleUrl": "./avatar.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div [ngClass]=\"containerClass()\" [ngStyle]=\"style\">\n  <ng-content></ng-content>\n  <span *ngIf=\"label; else iconTemplate\">{{ label }}</span>\n  <ng-template #iconTemplate>\n    <span [ngClass]=\"'avatar-icon'\" *ngIf=\"icon; else imageTemplate\"></span>\n  </ng-template>\n  <ng-template #imageTemplate><img [src]=\"image\" *ngIf=\"image\" /></ng-template>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-bc98c6f1f9eb5ce45dce1d1490709927",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "apps/event/src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedUiModule",
            "id": "module-SharedUiModule-acdaebfde2a8a093ba55cf48393787e7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/shared/ui/src/lib/shared-ui.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AvatarComponent } from './avatar/avatar.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [AvatarComponent],\n  exports: [AvatarComponent],\n})\nexport class SharedUiModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AvatarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AvatarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/event/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/event/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n}"
            },
            {
                "name": "getGreeting",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "apps/event-e2e/src/support/app.po.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => cy.get('h1')"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/shared/ui/src/lib/avatar/avatar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/shared/ui/src/lib/avatar/avatar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<AvatarComponent>",
                "defaultValue": "(args: AvatarComponent) => ({\n  component: AvatarComponent,\n  props: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "AvatarShape",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"square\" | \"circle\"",
                "file": "libs/shared/ui/src/lib/avatar/avatar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Shape options for the avatar.</p>\n",
                "kind": 183
            },
            {
                "name": "AvatarSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"regular\" | \"large\" | \"xlarge\"",
                "file": "libs/shared/ui/src/lib/avatar/avatar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Size options for the avatar.</p>\n",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "apps/event/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/event/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n}"
                }
            ],
            "apps/event/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/event/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n}"
                }
            ],
            "apps/event-e2e/src/support/app.po.ts": [
                {
                    "name": "getGreeting",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "apps/event-e2e/src/support/app.po.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => cy.get('h1')"
                }
            ],
            "libs/shared/ui/src/lib/avatar/avatar.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/shared/ui/src/lib/avatar/avatar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/shared/ui/src/lib/avatar/avatar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<AvatarComponent>",
                    "defaultValue": "(args: AvatarComponent) => ({\n  component: AvatarComponent,\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "libs/shared/ui/src/lib/avatar/avatar.component.ts": [
                {
                    "name": "AvatarShape",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"square\" | \"circle\"",
                    "file": "libs/shared/ui/src/lib/avatar/avatar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Shape options for the avatar.</p>\n",
                    "kind": 183
                },
                {
                    "name": "AvatarSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"regular\" | \"large\" | \"xlarge\"",
                    "file": "libs/shared/ui/src/lib/avatar/avatar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Size options for the avatar.</p>\n",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 12,
        "status": "low",
        "files": [
            {
                "filePath": "apps/event-e2e/src/support/app.po.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getGreeting",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/event-e2e/src/support/commands.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Chainable",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "apps/event/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "apps/event/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "apps/event/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/shared/ui/src/lib/avatar/avatar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/shared/ui/src/lib/avatar/avatar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/shared/ui/src/lib/avatar/avatar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AvatarComponent",
                "coveragePercent": 100,
                "coverageCount": "8/8",
                "status": "very-good"
            }
        ]
    }
}